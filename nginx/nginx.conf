# nginx/nginx.conf

# การตั้งค่าพื้นฐานของ Nginx
worker_processes auto;
events { worker_connections 1024; }

# บล็อก http ที่รวมทุกอย่างไว้ด้วยกัน
http {
    # ตั้งค่าพื้นฐาน
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # กำหนดกลุ่ม Server ปลายทาง
    upstream api_server {
        # 'shortener_app' คือชื่อ service ใน docker-compose.yml
        # 8000 คือ port ภายในที่แอป shortener_app ทำงาน
        server shortener_app:8000;
    }
    upstream webapp_server {
        # 'user_management' คือชื่อ service ใน docker-compose.yml
        # 5000 คือ port ภายในที่แอป user_management ทำงาน
        server user_management:5000;
    }

    # Server block สำหรับบังคับ redirect HTTP -> HTTPS
    server {
        listen 80;
        server_name url.nt.th; # แก้ไขเป็นโดเมนของคุณ
        return 301 https://$host$request_uri;
    }

    # Server block หลักสำหรับ HTTPS
    server {
        listen 443 ssl;
        http2 on; # เปิดใช้งาน HTTP/2
        server_name url.nt.th; # แก้ไขเป็นโดเมนของคุณ

        # --- SSL Configuration ---
        # ✏️ path นี้จะตรงกับที่ mount ใน docker-compose.yml
        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # --- Proxy Headers (สำคัญมาก) ---
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # --- Location สำหรับ User Management App ---
        location /apps {
            # การใส่ / ต่อท้าย proxy_pass เป็นสิ่งสำคัญ
            # มันจะบอกให้ Nginx ส่ง path ส่วนที่อยู่หลัง /apps/ ไปยัง backend
            # เช่น /apps/login จะถูกส่งไปเป็น /login ให้ Flask
            proxy_pass http://webapp_server/;

            # --- Headers ที่จำเป็นสำหรับการทำ Proxy ---
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host $host;

            # ✏️ Header สำคัญที่ ProxyFix ในโค้ด Flask ของคุณมองหา
            # เพื่อให้ Flask สร้าง URL สำหรับไฟล์ CSS/JS ได้ถูกต้อง
            proxy_set_header X-Forwarded-Prefix /apps;

            # รองรับ WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";

            client_max_body_size 100M;
        }

        # --- Location สำหรับ Shortener App ---
        location / {
            proxy_pass http://api_server;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # รองรับ WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
    }
}